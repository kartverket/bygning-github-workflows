name: Promote App Version

on:
  workflow_call:
    inputs:
      application_name:
        description: "The name of the application"
        required: true
        type: string
      namespace_from:
        description: "Namespace to promote from"
        required: true
        type: string
      namespace_to:
        description: "Namespace to promote to"
        required: true
        type: string
      cluster_from:
        description: "The cluster to promote from"
        required: true
        type: string
      cluster_to:
        description: "The cluster to promote to"
        required: true
        type: string
      allow_unsafe_deploy:
        description: "Whether or not applications can be deployed with image tags that are considered unsafe"
        type: boolean
        default: false
        required: false
      identity:
        description: "The identity to use for the deployment"
        type: string
        required: true

permissions:
  id-token: write

jobs:
  promote-app-version:
    runs-on: ubuntu-latest
    steps:
      - uses: octo-sts/action@e480437973a6f6ac2e9caa40ecabedc870d76395
        id: octo-sts
        with:
          scope: kartverket/bygning-apps
          identity: ${{ inputs.identity }}

      - name: Checkout the repository
        uses: actions/checkout@v5
        with:
          repository: kartverket/bygning-apps
          ref: main
          token: ${{ steps.octo-sts.outputs.token }}

      - name: Promote version, commit and push
        run: |
          git config --global user.email "bygning@kartverket.no"
          git config --global user.name "Bygning CI"
          git pull

          FROM_APPLICATION="${{ inputs.cluster_from }}/${{ inputs.namespace_from }}/${{ inputs.application_name }}/${{ inputs.application_name }}"
          TO_APPLICATION="${{ inputs.cluster_to }}/${{ inputs.namespace_to }}/${{ inputs.application_name }}/${{ inputs.application_name }}"

          IMAGE_VERSION="$(cat "env/${FROM_APPLICATION}-version")"

          if [ "${{ inputs.allow_unsafe_deploy }}" = "false" ]; then

              # Check if image version contains a semantic version pattern
              # The pattern is a simplified version which allows any -suffix, even if non-standard
              if ! [[ "$IMAGE_VERSION" =~ ^.+:v([0-9]|[1-9][0-9]+)\.([0-9]|[1-9][0-9]+)\.([0-9]|[1-9][0-9]+)(-\S+)?@.+$ ]]; then
                  echo "Error: Image version ${IMAGE_VERSION} does not contain required version format v#.#.#[-suffix]"
                  exit 1
              fi
          fi

          cp env/$FROM_APPLICATION-version env/$TO_APPLICATION-version

          git add --update .
          git commit -m "Promote application ${{ inputs.application_name }}/$IMAGE_VERSION from $FROM_APPLICATION to $TO_APPLICATION"
          git push
